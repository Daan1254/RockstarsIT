@model CreateEditSurveyViewModel

@{
    ViewData["Title"] = "Edit";
}

<link rel="stylesheet" href="~/css/Squads.css/Index.css" />

<div class="edit-container">
    <div class="inner-container">
        <h4>Bewerk @Model.Title</h4>
        
        <hr/>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="text-danger">@TempData["ErrorMessage"]</div>
            }
            <div class="form-group">
                <label asp-for="Title" class="control-label">Naam</label>
                <input asp-for="Title" class="form-control"/>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Beschrijving</label>
                <input asp-for="Description" class="form-control"/>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <h5>Vragen</h5>
            <div class="form-group">
                <div id="questions-container">
                    @for (int i = 0; i < Model.Questions.Count; i++)
                    {
                        <div class="form-group">
                            <input asp-for="Questions[i].Title" class="form-control"/>
                            <button type="button" class="btn btn-danger mt-2 remove-question">Verwijder Vraag</button>
                            <input type="hidden" asp-for="Questions[i].Id"/>
                        </div>
                    }
                </div>
            </div>
            <button type="button" id="add-question" class="btn btn-secondary mt-2">Voeg Vraag Toe</button>
            <div class="form-group">
                <input type="submit" value="Opslaan" class="btn  btn-warning text-white mt-2" style="width: 100%; margin-top: 50px !important;"/>
            </div>
            <div class="form-group">
                <label asp-for="SelectedSquadIds" class="control-label">Add new Squads</label>
                <select asp-for="SelectedSquadIds" class="form-control" asp-items="@(new SelectList(Model.AllSquads.Where(s => !Model.SelectedSquadIds.Contains(s.Id)), "Id", "Name"))"></select>
                <span asp-validation-for="SelectedSquadIds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SquadIdsToDelete" class="control-label">Remove Squad</label>
                <select asp-for="SquadIdsToDelete" class="form-control" asp-items="@(new SelectList(Model.Squads?.Where(s => !Model.SelectedSquadIds.Contains(s.Id)) ?? Enumerable.Empty<SquadViewModel>(), "Id", "Name"))"></select>
                <span asp-validation-for="SquadIdsToDelete" class="text-danger"></span>
            </div>
            <div class="form-group">
                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger" style="width: 100%;" onclick="return confirm('Weet je zeker dat je deze health check wilt verwijderen?');">Verwijder Health check</a>
            </div>
            <input type="hidden" asp-for="Id" />
        </form>
        <a class="btn bg-black text-white" asp-action="Index">Terug</a>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const container = document.getElementById("questions-container");
            const addQuestionButton = document.getElementById("add-question");

            let questionIndex = @Model.Questions.Count;

            addQuestionButton.addEventListener("click", function () {
                const questionDiv = document.createElement("div");
                questionDiv.classList.add("form-group", "mt-2");

                questionDiv.innerHTML = `
                    <div class="flex flex-row gap-2">
                        <input type="text" name="Questions[${questionIndex}].Title" class="form-control question-title" placeholder="Vraag ${questionIndex + 1}" />
                        <button type="button" class="btn btn-danger mt-2 remove-question">Verwijder Vraag</button>
                        <input type="hidden" name="Questions[${questionIndex}].Id" value="0" />
                    </div>
                `;

                container.appendChild(questionDiv);
                questionIndex++;
            });

            // Function to reindex questions
            function reindexQuestions() {
                const remainingQuestions = container.querySelectorAll(".form-group");
                remainingQuestions.forEach((question, index) => {
                    const titleInput = question.querySelector("input[type='text']");
                    const idInput = question.querySelector("input[type='hidden']");
                    
                    titleInput.name = `Questions[${index}].Title`;
                    titleInput.placeholder = `Vraag ${index + 1}`;
                    idInput.name = `Questions[${index}].Id`;
                });
                questionIndex = remainingQuestions.length;
            }

            // Handle question removal using event delegation
            container.addEventListener("click", function(event) {
                const removeButton = event.target.closest(".remove-question");
                if (removeButton) {
                    const questionDiv = event.target.closest(".form-group");
                    questionDiv.remove();
                    reindexQuestions();
                }
            });
        });
    </script>
}
